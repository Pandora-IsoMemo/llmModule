[{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pandora-isomemo.github.io/llmModule/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ricardo Fernandes. Author, maintainer. Antonia Runge. Author.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fernandes R, Runge (2025). llmModule: R Interface Large Language Model APIs. R package version 25.06.1, https://pandora-isomemo.github.io/llmModule/.","code":"@Manual{,   title = {llmModule: R Interface for Large Language Model APIs},   author = {Ricardo Fernandes and Antonia Runge},   year = {2025},   note = {R package version 25.06.1},   url = {https://pandora-isomemo.github.io/llmModule/}, }"},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"llmmodule-development-version","dir":"","previous_headings":"","what":"R Interface for Large Language Model APIs","title":"R Interface for Large Language Model APIs","text":"llmModule provides structured extensible R interface interact remote (e.g., OpenAI, DeepSeek) local (via Ollama) Large Language Model (LLM) APIs. simplifies key workflows model selection, prompt configuration, request handling consistent object-oriented interface. llmModule provides structured R interface working Large Language Model (LLM) APIs, including OpenAI DeepSeek. simplifies interactions chat-based LLMs offering methods S3 classes : API key management validation Prompt configuration Sending chat prompts Extracting responses","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-features","dir":"","previous_headings":"","what":"🚀 Features","title":"R Interface for Large Language Model APIs","text":"RemoteLlmApi remote providers (OpenAI, DeepSeek) LocalLlmApi local Ollama servers LlmPromptConfig configure prompt messages parameters LlmResponse structured handling responses Validates API key format, provider match, key functionality via test request Clear error reporting automatic suggestion likely provider mismatches Allows pull new models Allows exclusion deprecated irrelevant models via exclude_pattern get_llm_models() fetch available models send_prompt() submit prompts retrieve responses Optional Docker integration local deployment (see )","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-quick-example","dir":"","previous_headings":"","what":"🧪 Quick Example","title":"R Interface for Large Language Model APIs","text":"","code":"# Create an LLM API object api <- new_RemoteLlmApi(\"~/.secrets/openai.txt\", provider = \"OpenAI\")  # Set up a prompt prompt <- new_LlmPromptConfig(       model = \"gpt-4.1\",       prompt_content = \"What's the capital of Italy?\" )  # Send the prompt result <- send_prompt(api, prompt)  # Extract the assistant's reply result$choices[[1]]$message$content"},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-docker-installation-recommended","dir":"","previous_headings":"","what":"📦 Docker Installation (recommended)","title":"R Interface for Large Language Model APIs","text":"Run app browser just one command! Docker setup includes components — llmModule Shiny frontend ollama backend local LLM model serving — manual setup required.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-1-install-the-software-docker","dir":"","previous_headings":"📦 Docker Installation (recommended)","what":"✅ 1. Install the software Docker","title":"R Interface for Large Language Model APIs","text":"Download installation files one links follow installation instructions: Windows MacOS Linux Docker installed can pull & run app manually.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-2-run-the-app-with-docker-compose","dir":"","previous_headings":"📦 Docker Installation (recommended)","what":"🚀 2. Run the App with Docker Compose","title":"R Interface for Large Language Model APIs","text":"Open terminal (command line): Open Start menu press Windows key + R; Type cmd cmd.exe Run command box; Press Enter. MacOS: open Terminal app. Linux: Linux systems use default keyboard shortcut start command line: Ctrl-Alt-T Super-T start app need docker-compose.yaml Repository. can either: Run directly without cloning repo: : Clone repository run project directory: commands : ollama (model serving REST API) llm-module (Shiny web frontend controls Ollama can also interact LLM APIs like OpenAI, Deepseek). images pulled, Docker network Docker volume created, container start. llm-module container hosts application, can access web browser http://127.0.0.1:3838/.","code":"curl -sL https://raw.githubusercontent.com/Pandora-IsoMemo/llmModule/refs/heads/main/docker-compose.yml | docker compose -f - up git clone https://github.com/Pandora-IsoMemo/llmModule.git cd llmModule docker compose up"},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"id_-3-run-the-app-with-a-custom-ollama-models-path-optional","dir":"","previous_headings":"📦 Docker Installation (recommended)","what":"🚀 3. Run the app with a custom Ollama models path (optional)","title":"R Interface for Large Language Model APIs","text":"use pre-downloaded Ollama models, specify custom path setting OLLAMA_LOCAL_MODELS_PATH environment variable. requires cloning repository running Docker Compose project directory. Default locations Ollama models: linux: /usr/share/ollama/.ollama macOS: ~/.ollama windows: C:\\\\Users\\\\<username>\\\\.ollama mount local models container faster startup persistent access.","code":"OLLAMA_LOCAL_MODELS_PATH=/path/to/your/models docker compose up"},{"path":"https://pandora-isomemo.github.io/llmModule/index.html","id":"notes-for-developers--local-testing","dir":"","previous_headings":"","what":"Notes for developers — local testing","title":"R Interface for Large Language Model APIs","text":"build run app locally: Use --build : made changes source code Dockerfiles, ’re testing fresh environment. run custom models path: Tip: Use docker compose stop clean containers done.","code":"docker compose up --build OLLAMA_LOCAL_MODELS_PATH=<\/path/to/your/models> docker compose up --build"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.LlmResponse.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and format LLM response as a table — as_table.LlmResponse","title":"Extract and format LLM response as a table — as_table.LlmResponse","text":"Extract format LLM response table","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.LlmResponse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and format LLM response as a table — as_table.LlmResponse","text":"","code":"# S3 method for class 'LlmResponse' as_table(x, output_type = c(\"text\", \"meta\", \"logprobs\", \"complete\"), ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.LlmResponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and format LLM response as a table — as_table.LlmResponse","text":"x LlmResponse object output_type character string indicating type output format. Possible values \"text\", \"meta\", \"logprobs\", \"complete\". ... Additional arguments (used)","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.LlmResponse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and format LLM response as a table — as_table.LlmResponse","text":"formatted character string","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic extractor for LlmResponse outputs — as_table","title":"Generic extractor for LlmResponse outputs — as_table","text":"Generic extractor LlmResponse outputs","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic extractor for LlmResponse outputs — as_table","text":"","code":"as_table(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/as_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic extractor for LlmResponse outputs — as_table","text":"x LlmResponse object ... Additional arguments (used)","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.LocalLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Available LLM Models — get_llm_models.LocalLlmApi","title":"Retrieve Available LLM Models — get_llm_models.LocalLlmApi","text":"get_llm_models() method fetches list available models local Ollama Large Language Model (LLM) API. requires LocalLlmApi object returns available models.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.LocalLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Available LLM Models — get_llm_models.LocalLlmApi","text":"","code":"# S3 method for class 'LocalLlmApi' get_llm_models(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.LocalLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Available LLM Models — get_llm_models.LocalLlmApi","text":"x object class LocalLlmApi ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.LocalLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Available LLM Models — get_llm_models.LocalLlmApi","text":"response object containing list available models selected API.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"get_llm_models() method fetches list available models specified remote Large Language Model (LLM) API, OpenAI's GPT models DeepSeek models. requires RemoteLlmApi object authentication returns available model options.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"","code":"# S3 method for class 'RemoteLlmApi' get_llm_models(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"x object class RemoteLlmApi ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"response object containing list available models selected API. includes model IDs, descriptions, metadata.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"function allows users dynamically query OpenAI DeepSeek determine models accessible ensuring valid authentication via LlmApi class.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.RemoteLlmApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Available LLM Models — get_llm_models.RemoteLlmApi","text":"","code":"if (FALSE) { # \\dontrun{ # Create API credentials for DeepSeek api <- new_RemoteLlmApi(api_key_path = \"path/to/deepseek_key.txt\", provider = \"DeepSeek\")  # Retrieve available models from DeepSeek models <- get_llm_models(api)  # Create API credentials for OpenAI api <- new_RemoteLlmApi(api_key_path = \"path/to/openai_key.txt\", provider = \"OpenAI\")  # Retrieve available models from OpenAI models <- get_llm_models(api) } # }"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic extractor for LlmApi outputs — get_llm_models","title":"Generic extractor for LlmApi outputs — get_llm_models","text":"Generic extractor LlmApi outputs","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic extractor for LlmApi outputs — get_llm_models","text":"","code":"get_llm_models(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/get_llm_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic extractor for LlmApi outputs — get_llm_models","text":"x LlmApi object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/has_internet.html","id":null,"dir":"Reference","previous_headings":"","what":"Has Internet — has_internet","title":"Has Internet — has_internet","text":"Internet","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/has_internet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has Internet — has_internet","text":"","code":"has_internet(url = \"https://www.google.com\", timeout = 2)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/has_internet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has Internet — has_internet","text":"url (character) URL test internet connectivity. Default \"https://www.google.com\". timeout (numeric) number seconds wait response giving . Can less 1 ms.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_server.html","id":null,"dir":"Reference","previous_headings":"","what":"LLM Prompt Generator Server Module — llm_generate_prompt_server","title":"LLM Prompt Generator Server Module — llm_generate_prompt_server","text":"Server-side logic handling prompt input, LLM API interaction, response handling, error/status display.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LLM Prompt Generator Server Module — llm_generate_prompt_server","text":"","code":"llm_generate_prompt_server(   id,   auto_complete_list = reactive(NULL),   no_internet = NULL,   exclude_pattern = \"\" )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LLM Prompt Generator Server Module — llm_generate_prompt_server","text":"id string specifying module namespace, matching `id` used `llm_generate_prompt_ui`. auto_complete_list reactive list. no_internet logical exclude_pattern character, regex pattern exclude certain models list available models, e.g. \"babbage|curie|dall-e|davinci|text-embedding|tts|whisper\"","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LLM Prompt Generator Server Module — llm_generate_prompt_server","text":"reactive value (`reactiveVal`) containing `LlmResponse` object returned LLM API.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LLM Prompt Generator Server Module — llm_generate_prompt_server","text":"server module: - Initializes LLM API prompt configuration modules. - Enables disables \"Generate Text\" button based configuration readiness. - click, sends prompt API stores result `reactiveVal`. - Uses `statusMessageServer()` provide feedback response generation status. - Renders LLM response using `renderPrint()` UI configured . depends additional server modules: - `llm_api_server()` managing API key connection - `llm_prompt_config_server()` prompt tuning options - `statusMessageServer()` show status messages like success, warning, error","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","title":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","text":"Provides user interface enter prompt, configure LLM API access, optionally display generated text output.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","text":"","code":"llm_generate_prompt_ui(   id,   prompt_beginning = \"\",   prompt_placeholder = \"Ask me anything...\",   theme = \"xcode\",   output_response = FALSE )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","text":"id unique string identifying module namespace. prompt_beginning Optional character string shown prefix label prompt input. Default `\"\"`. prompt_placeholder Placeholder text shown prompt input field. Default `\"Ask anything...\"`. theme Editor theme ACE input. Defaults `\"xcode\"`. output_response Logical; whether show generated response output input UI. Default `FALSE`.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","text":"UI definition (tagList) can included Shiny app.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/llm_generate_prompt_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LLM Prompt Generator UI Module — llm_generate_prompt_ui","text":"module renders following elements: - LLM API configuration UI (via `llm_api_ui`) - Prompt configuration UI (via `llm_prompt_config_ui`) - ACE code editor prompt input - \"Generate Text\" button status messaging - Optional display generated response (controlled `output_response`)","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmPromptConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","title":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","text":"new_LlmPromptConfig() function constructs S3 object stores parameters required making requests Large Language Models (LLMs) OpenAI's GPT models DeepSeek models.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmPromptConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","text":"","code":"new_LlmPromptConfig(   prompt_content,   model,   max_tokens = 100,   temperature = 1,   prompt_role = \"user\",   seed = NULL,   top_p = 1,   n = 1,   stop = NULL,   presence_penalty = 0,   frequency_penalty = 0,   logprobs = FALSE )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmPromptConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","text":"prompt_content character string containing primary instruction query model. serves main input LLM. model Character string specifying model use (e.g., `'gpt-4.1'` OpenAI `'deepseek-chat'` DeepSeek).  retrieve list valid models LLM, use get_llm_models() method See following documentation valid models: - OpenAI model list - DeepSeek model list max_tokens numeric (default: 100) defining maximum number tokens generated response. temperature numeric (default: 1.0) controlling randomness responses. Lower values (e.g., 0.2) make responses deterministic, higher values (e.g., 1.5) increase creativity. prompt_role character (default: 'user') specifying role message. Common values include 'system', 'assistant', 'user'. seed numeric (optional) controlling reproducibility. NULL, seed set. top_p numeric (default: 1) alternative temperature, specifying nucleus sampling probability. value 0.1 considers top 10% probability mass. n numeric (default: 1) defining number responses generate per request. temperature 0, n automatically set 1. stop character character vector (default: NULL) defining stop sequences response termination. 4 sequences can specified. presence_penalty numeric (default: 0) -2.0 +2.0, influencing model inclination introduce new topics. frequency_penalty numeric (default: 0) -2.0 +2.0, influencing model tendency repeat words phrases. logprobs boolean (default: FALSE) specifying whether return log probabilities output tokens.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmPromptConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","text":"object class LlmPromptConfig, containing specified parameters structured format.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmPromptConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and Manage LLM Prompt Settings — new_LlmPromptConfig","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve available models api <- new_RemoteLlmApi(api_key_path = \"path/to/openai_key.txt\", provider = \"OpenAI\") models <- get_llm_models(api) } # }  # Create a parameter object for OpenAI GPT-4.1 params <- new_LlmPromptConfig(   prompt_content = 'Explain entropy in simple terms.',   model = 'gpt-4.1',   temperature = 0.7,   max_tokens = 150 )  # Create a parameter object for DeepSeek params <- new_LlmPromptConfig(   prompt_content = 'What are three innovative AI research topics?',   model = 'deepseek-chat',   temperature = 0.9,   n = 3 )  # Print the parameter object print(params) #> LLM Promp Settings #> Model: deepseek-chat  #> Prompt Role: user  #> Prompt Content: What are three innovative AI research topics?  #> Max Tokens: 100  #> Temperature: 0.9  #> Top-P: 1  #> N: 3"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmResponse.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Structure LLM Response Object — new_LlmResponse","title":"Create and Structure LLM Response Object — new_LlmResponse","text":"new_LlmResponse() function sends prompt Large Language Model (LLM) API returns structured response object. integrates credentials LlmApi object prompt configuration LlmPromptConfig object, handles request errors gracefully, returns model-generated content along associated metadata.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmResponse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Structure LLM Response Object — new_LlmResponse","text":"","code":"new_LlmResponse(api, prompt_config)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmResponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Structure LLM Response Object — new_LlmResponse","text":"api object class RemoteLlmApi LocalLlmApi. prompt_config object class LlmPromptConfig, containing prompt content, model, tuning parameters (e.g., temperature, max tokens).","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmResponse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Structure LLM Response Object — new_LlmResponse","text":"object class LlmResponse, includes following components: - content: raw API response returned model. - provider: name API provider (e.g., \"OpenAI\", \"DeepSeek\"). - prompt_config: unclassed list representation original prompt settings. - generated_text: primary response text content model. error occurs validation request sending, empty list returned error attribute containing error message.","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LlmResponse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and Structure LLM Response Object — new_LlmResponse","text":"","code":"api <- new_RemoteLlmApi(api_key_path = \"path/to/key.txt\", provider = \"OpenAI\") prompt <- new_LlmPromptConfig(   prompt_content = \"Explain entropy in simple terms.\",   model = \"gpt-3.5-turbo\",   temperature = 0.7 ) response <- new_LlmResponse(api, prompt)  if (!is.null(attr(response, \"error\"))) {   cat(\"Error:\", attr(response, \"error\"), \"\\n\") } else {   cat(\"Model response:\", response$generated_text, \"\\n\") } #> Error: LLM API not valid, must be an RemoteLlmApi or LocalLlmApi object."},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LocalLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Validate Local LLM API Credentials — new_LocalLlmApi","title":"Create and Validate Local LLM API Credentials — new_LocalLlmApi","text":"Create Validate Local LLM API Credentials","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LocalLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Validate Local LLM API Credentials — new_LocalLlmApi","text":"","code":"new_LocalLlmApi(   manager,   new_model = \"\",   base_url = Sys.getenv(\"OLLAMA_BASE_URL\", unset = \"http://localhost:11434\"),   exclude_pattern = \"\" )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LocalLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Validate Local LLM API Credentials — new_LocalLlmApi","text":"manager OllamaModelManager object new_model Character, model name input user (can partial) model pull base_url Local Ollama base URL exclude_pattern Character, regex pattern exclude certain models list available models, e.g. \"babbage|curie|dall-e|davinci|text-embedding|tts|whisper\"","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_LocalLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Validate Local LLM API Credentials — new_LocalLlmApi","text":"object class LocalLlmApi, list \"error\" attribute construction fails.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Ollama Model Object — new_OllamaModel","title":"Create an Ollama Model Object — new_OllamaModel","text":"Constructs S3 object representing single Ollama model, including name status (e.g., ready, pulled, error).","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Ollama Model Object — new_OllamaModel","text":"","code":"new_OllamaModel(model_name, status = \"ready\", message = NULL)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Ollama Model Object — new_OllamaModel","text":"model_name Character string, model's name status Character string, model status (\"ready\", \"pulled\", \"error\") message Optional character string, error message ","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Ollama Model Object — new_OllamaModel","text":"object class OllamaModel","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModelManager.html","id":null,"dir":"Reference","previous_headings":"","what":"Ollama Model Manager — new_OllamaModelManager","title":"Ollama Model Manager — new_OllamaModelManager","text":"Manages listing, checking, pulling Ollama models.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModelManager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ollama Model Manager — new_OllamaModelManager","text":"","code":"new_OllamaModelManager()"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_OllamaModelManager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ollama Model Manager — new_OllamaModelManager","text":"object class OllamaModelManager","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"new_RemoteLlmApi() function constructs S3 object stores API credentials interacting Large Language Models (LLMs) OpenAI's GPT models DeepSeek models. reads API key specified file, validates format, ensures matches correct provider, checks key valid performing test request.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"","code":"new_RemoteLlmApi(   api_key_path,   provider,   no_internet = NULL,   exclude_pattern = \"\" )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"api_key_path Character string specifying path file containing API key. provider Character string specifying provider API key. Must either \"OpenAI\" \"DeepSeek\". no_internet Logical, indicating whether skip internet checks. `TRUE`, function attempt validate API key via network request. exclude_pattern Character, regex pattern exclude certain models list available models, e.g. \"babbage|curie|dall-e|davinci|text-embedding|tts|whisper\"","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"object class RemoteLlmApi, containing API key, URL, provider name  (either \"OpenAI\" \"DeepSeek\"), list \"error\" attribute construction fails.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"function includes multiple validation steps: - Reads API key specified file. - Ensures API key format correct (e.g., OpenAI keys start \"sk-\" DeepSeek keys contain alphanumeric characters). - Matches API key correct provider. - Prevents incorrect combinations API keys providers. - Sends test request verify API key active functional. checks fail, error returned details issue.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/new_RemoteLlmApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and Validate Remote LLM API Credentials — new_RemoteLlmApi","text":"","code":"if (FALSE) { # \\dontrun{ # Create API credentials for OpenAI api <- new_RemoteLlmApi(api_key_path = \"path/to/openai_key.txt\", provider = \"OpenAI\")  # Create API credentials for DeepSeek api <- new_RemoteLlmApi(api_key_path = \"path/to/deepseek_key.txt\", provider = \"DeepSeek\")  # Print the API object print(api) } # }"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmPromptConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for better readability — print.LlmPromptConfig","title":"Print method for better readability — print.LlmPromptConfig","text":"Print method better readability","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmPromptConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for better readability — print.LlmPromptConfig","text":"","code":"# S3 method for class 'LlmPromptConfig' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmPromptConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for better readability — print.LlmPromptConfig","text":"x LlmPromptConfig object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmResponse.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for user-friendly display — print.LlmResponse","title":"Print method for user-friendly display — print.LlmResponse","text":"Print method user-friendly display","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmResponse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for user-friendly display — print.LlmResponse","text":"","code":"# S3 method for class 'LlmResponse' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LlmResponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for user-friendly display — print.LlmResponse","text":"x LlmResponse object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LocalLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for LocalLlmApi — print.LocalLlmApi","title":"Print method for LocalLlmApi — print.LocalLlmApi","text":"Print method LocalLlmApi","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LocalLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for LocalLlmApi — print.LocalLlmApi","text":"","code":"# S3 method for class 'LocalLlmApi' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.LocalLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for LocalLlmApi — print.LocalLlmApi","text":"x LocalLlmApi object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for OllamaModel — print.OllamaModel","title":"Print method for OllamaModel — print.OllamaModel","text":"Print method OllamaModel","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for OllamaModel — print.OllamaModel","text":"","code":"# S3 method for class 'OllamaModel' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for OllamaModel — print.OllamaModel","text":"x OllamaModel object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModelManager.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for OllamaModelManager — print.OllamaModelManager","title":"Print method for OllamaModelManager — print.OllamaModelManager","text":"Print method OllamaModelManager","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModelManager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for OllamaModelManager — print.OllamaModelManager","text":"","code":"# S3 method for class 'OllamaModelManager' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.OllamaModelManager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for OllamaModelManager — print.OllamaModelManager","text":"x OllamaModelManager object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.RemoteLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RemoteLlmApi — print.RemoteLlmApi","title":"Print method for RemoteLlmApi — print.RemoteLlmApi","text":"Print method RemoteLlmApi","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.RemoteLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RemoteLlmApi — print.RemoteLlmApi","text":"","code":"# S3 method for class 'RemoteLlmApi' print(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/print.RemoteLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RemoteLlmApi — print.RemoteLlmApi","text":"x RemoteLlmApi object ... Additional arguments","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.LocalLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a prompt to a local llm API (e.g., Ollama) — send_prompt.LocalLlmApi","title":"Send a prompt to a local llm API (e.g., Ollama) — send_prompt.LocalLlmApi","text":"function sends prompt local LLM API (Ollama) returns response structured format.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.LocalLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a prompt to a local llm API (e.g., Ollama) — send_prompt.LocalLlmApi","text":"","code":"# S3 method for class 'LocalLlmApi' send_prompt(api, prompt_config)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.LocalLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a prompt to a local llm API (e.g., Ollama) — send_prompt.LocalLlmApi","text":"api object class LocalLlmApi, contains URL model name local LLM API. prompt_config object class LlmPromptConfig, containing prompt content model parameters.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.LocalLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a prompt to a local llm API (e.g., Ollama) — send_prompt.LocalLlmApi","text":"list containing response Ollama API, structured similarly OpenAI responses.","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.RemoteLlmApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a prompt to a remote LLM API (e.g., OpenAI, DeepSeek) This function sends a prompt to the remote LLM API and returns the response in a structured format. — send_prompt.RemoteLlmApi","title":"Send a prompt to a remote LLM API (e.g., OpenAI, DeepSeek) This function sends a prompt to the remote LLM API and returns the response in a structured format. — send_prompt.RemoteLlmApi","text":"Send prompt remote LLM API (e.g., OpenAI, DeepSeek) function sends prompt remote LLM API returns response structured format.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.RemoteLlmApi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a prompt to a remote LLM API (e.g., OpenAI, DeepSeek) This function sends a prompt to the remote LLM API and returns the response in a structured format. — send_prompt.RemoteLlmApi","text":"","code":"# S3 method for class 'RemoteLlmApi' send_prompt(api, prompt_config)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.RemoteLlmApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a prompt to a remote LLM API (e.g., OpenAI, DeepSeek) This function sends a prompt to the remote LLM API and returns the response in a structured format. — send_prompt.RemoteLlmApi","text":"api object class RemoteLlmApi, contains API key URL remote LLM API. prompt_config object class LlmPromptConfig, containing prompt content model parameters.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.RemoteLlmApi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a prompt to a remote LLM API (e.g., OpenAI, DeepSeek) This function sends a prompt to the remote LLM API and returns the response in a structured format. — send_prompt.RemoteLlmApi","text":"list containing response LLM API, structured similarly OpenAI responses.","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic LLM prompt sender This function is a generic method for sending prompts to a remote or local LLM API. It dispatches to the appropriate method based on the class of the `api` argument. — send_prompt","title":"Generic LLM prompt sender This function is a generic method for sending prompts to a remote or local LLM API. It dispatches to the appropriate method based on the class of the `api` argument. — send_prompt","text":"Generic LLM prompt sender function generic method sending prompts remote local LLM API. dispatches appropriate method based class `api` argument.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic LLM prompt sender This function is a generic method for sending prompts to a remote or local LLM API. It dispatches to the appropriate method based on the class of the `api` argument. — send_prompt","text":"","code":"send_prompt(api, prompt_config)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/send_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic LLM prompt sender This function is a generic method for sending prompts to a remote or local LLM API. It dispatches to the appropriate method based on the class of the `api` argument. — send_prompt","text":"api object class RemoteLlmApi LocalLlmApi, contains API key URL remote LLM API. prompt_config object class LlmPromptConfig, containing prompt content model parameters.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/startApplication.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Application — startApplication","title":"Start Application — startApplication","text":"Start Application","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/startApplication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Application — startApplication","text":"","code":"startApplication(   port = getOption(\"shiny.port\"),   host = getOption(\"shiny.host\", \"127.0.0.1\"),   launch.browser = getOption(\"shiny.launch.browser\", interactive()) )"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/startApplication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start Application — startApplication","text":"port port host host launch.browser true, system's default web browser launched","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.OllamaModelManager.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the list of locally available models — update.OllamaModelManager","title":"Update the list of locally available models — update.OllamaModelManager","text":"Update list locally available models","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.OllamaModelManager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the list of locally available models — update.OllamaModelManager","text":"","code":"# S3 method for class 'OllamaModelManager' update(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.OllamaModelManager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the list of locally available models — update.OllamaModelManager","text":"x OllamaModelManager object ... used, compatibility","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.OllamaModelManager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the list of locally available models — update.OllamaModelManager","text":"Updated OllamaModelManager object","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic update function — update","title":"Generic update function — update","text":"Dispatches update methods different object classes.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic update function — update","text":"","code":"update(x, ...)"},{"path":"https://pandora-isomemo.github.io/llmModule/reference/update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic update function — update","text":"x Object update ... arguments","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/news/index.html","id":"new-features-25-06-1","dir":"Changelog","previous_headings":"","what":"New features","title":"llmModule 25.06.1","text":"add options enable integration llm_generate_prompt shiny module import module DataTools package (#3)","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/news/index.html","id":"new-features-25-06-0","dir":"Changelog","previous_headings":"","what":"New features","title":"llmModule 25.06.0","text":"Added option use LLM models local installation Ollama: New classes LocalLlmApi, OllamaModel, OllamaModelManager provide support model configuration, response parsing using locally hosted models. llm_api_ui/server, llm_prompt_config_ui/server llm_generate_prompt_ui/server functions now detect support Ollama-based backends.","code":""},{"path":"https://pandora-isomemo.github.io/llmModule/news/index.html","id":"bug-fixes-25-06-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"llmModule 25.06.0","text":"Fixed issue ‘Generate Text’ button remained enabled even valid API key configured.","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/news/index.html","id":"new-features-25-04-0","dir":"Changelog","previous_headings":"","what":"New features","title":"llmModule 25.04.0","text":"added method format API response (#1)","code":""},{"path":[]},{"path":"https://pandora-isomemo.github.io/llmModule/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"llmModule 0.1.0","text":"first draft llm module","code":""}]
